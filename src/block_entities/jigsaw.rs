use serde::{Deserialize, Serialize};
use std::borrow::Cow;

#[derive(Debug, Deserialize, Serialize, Clone, PartialEq)]
pub struct Jigsaw<'a> {
    /// The block that this jigsaw block becomes.
    #[serde(borrow)]
    pub final_state: Cow<'a, str>,

    /// The joint option value, either "rollable" or "aligned".
    #[serde(borrow)]
    pub joint: Cow<'a, str>,

    /// The jigsaw block's name. This jigsaw block gets aligned with another structure's jigsaw block that has this value in the target tag.
    #[serde(borrow)]
    pub name: Cow<'a, str>,

    /// The jigsaw block's target pool to select a structure from.
    #[serde(borrow)]
    pub pool: Cow<'a, str>,

    /// The jigsaw block's target name. This jigsaw block gets aligned with another structure's jigsaw block that has this value in the name tag.
    #[serde(borrow)]
    pub target: Cow<'a, str>,

    /// Priority of this jigsaw block being selected for generation. Jigsaw blocks with higher selection priority get selected first.
    pub selection_priority: i32,

    /// Priority of the piece generated by this jigsaw block to place its children. Pieces with higher placement priority generate their children first.
    pub placement_priority: i32,
}
